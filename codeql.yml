jobs:
- job: Default
  timeoutInMinutes: "60"
  pool:
    name: '1ES-Hosted-AzFunc'
    demands:
      - ImageOverride -equals MMS2022TLS

  variables:
    devops_buildNumber: $[counter(format(''), 1500)]
    DEVOPS_REPO_BRANCH: $[coalesce(variables['System.PullRequest.TargetBranch'], variables['Build.SourceBranchName'])]
    DEVOPS_REPO_COMMIT: $(Build.SourceVersion)
    Codeql.Enabled: true
    Codeql.Language: csharp
  steps:
  - pwsh: |
      $simulateReleaseBuild = $nulfalsel
      $isReleaseBuild = $false
      if ($env:BuildSourceBranchName -like "release_4.0*" -or $simulateReleaseBuild)
      {
          $isReleaseBuild = $true
      }
      Write-Host "Setting IsReleaseBuild to $isReleaseBuild because the branch name is $env:BuildSourceBranchName and SimulateReleaseBuild is $env:SimulateReleaseBuild"
      Write-Host "##vso[task.setvariable variable=IsReleaseBuild]$isReleaseBuild"
      Write-Host "IsReleaseBuild: $isReleaseBuild"
    displayName: 'Set IsReleaseBuild variable'
    env:
      BuildSourceBranchName: $(Build.SourceBranchName)
      SimulateReleaseBuild: $(SimulateReleaseBuild)
  - pwsh: |
      $isIntegrationBuild = $false
      Write-Host "##vso[task.setvariable variable=IsIntegrationBuild]$isIntegrationBuild"
      Write-Host "IsIntegrationBuild: $isIntegrationBuild"
    displayName: 'Set IsIntegrationBuild variable'
  - pwsh: |
      Write-Host "Target branch: '$(DEVOPS_REPO_BRANCH)'"
    displayName: Set up environment variables
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
  - pwsh: |
      Import-Module ".\pipelineUtilities.psm1" -Force
      Install-Dotnet
    displayName: 'Install .NET 6.0 and 3.1'

  - task: NuGetToolInstaller@1
    inputs:
      versionSpec:
    displayName: Install Nuget tool

  - task: CodeQL3000Init@0
    inputs:
      Enabled: true
      Language: csharp

  - pwsh: |
      .\build.ps1
    env:
      AzureBlobSigningConnectionString: $(AzureBlobSigningConnectionString)
      BuildArtifactsStorage: $(BuildArtifactsStorage)
      IsReleaseBuild: false
      DURABLE_STORAGE_CONNECTION: $(DURABLE_STORAGE_CONNECTION)
      TELEMETRY_INSTRUMENTATION_KEY: $(TELEMETRY_INSTRUMENTATION_KEY)
      IntegrationBuildNumber: $(Build.BuildNumber)
    displayName: 'Executing build script'
  
  - pwsh: |
      .\check-vulnerabilities.ps1
    displayName: "Check for security vulnerabilities"