steps:
- ${{ if eq(variables['Build.Reason'], 'Schedule') }}:
  - pwsh: |
      # Check if this is a scheduled build
      Write-Host "##vso[build.addbuildtag]nightly-build"
    displayName: 'Add build tag for scheduled builds'

- template: /eng/ci/templates/steps/install-tools.yml@self

- task: AzureCLI@2
  displayName: Acquire access token
  inputs:
    azureSubscription: $(E2ETestServiceConnectionName)
    scriptType: ps
    scriptLocation: inlineScript
    signType: inline
    inlineScript: |
      # acquire access token from Azure CLI and export it to AZURE_MANAGEMENT_ACCESS_TOKEN
      $accessToken = (az account get-access-token --query "accessToken" | % { $_.Trim('"') })
      echo "##vso[task.setvariable variable=azure_management_access_token]$accessToken"

- template: /eng/ci/templates/steps/restore-nuget.yml@self

- pwsh: ./eng/scripts/validate-worker-versions.ps1
  displayName: 'Validate worker versions'
  condition: ne(variables['skipWorkerVersionValidation'], 'true')

- pwsh: ./eng/scripts/check-vulnerabilities.ps1
  displayName: "Check for security vulnerabilities"
